import { Telegraf, Markup, session } from 'telegraf';
import { ChartJSNodeCanvas } from 'chartjs-node-canvas';
import Chart from 'chart.js/auto/auto.js';
import annotationPlugin from 'chartjs-plugin-annotation';

// --- –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ---
const BOT_TOKEN = '8072367890:AAG2YD0mCajiB8JSstVuozeFtfosURGvzlk';
const bot = new Telegraf(BOT_TOKEN);
bot.use(session());

const pairsMain = [
  'EURUSD', 'USDJPY', 'GBPUSD', 'USDCHF', 'AUDUSD', 'USDCAD', 'NZDUSD', 'EURGBP',
  'EURJPY', 'GBPJPY', 'CHFJPY', 'AUDJPY', 'EURCHF', 'EURCAD', 'AUDCAD', 'NZDJPY',
];

const pairsOTC = [
  'OTC_EURAUD', 'OTC_EURCAD', 'OTC_EURCHF', 'OTC_EURJPY',
  'OTC_EURNZD', 'OTC_EURUSD', 'OTC_GBPCHF', 'OTC_GBPJPY',
  'OTC_GBPNZD', 'OTC_GBPUSD', 'OTC_USDCAD', 'OTC_USDCHF',
  'OTC_USDJPY', 'OTC_USDNZD', 'OTC_AUDCAD', 'OTC_AUDCHF',
];

const timeframes = [
  { label: { ru: '1 –º–∏–Ω—É—Ç–∞', en: '1 minute' }, value: '1m', minutes: 1 },
  { label: { ru: '5 –º–∏–Ω—É—Ç', en: '5 minutes' }, value: '5m', minutes: 5 },
  { label: { ru: '15 –º–∏–Ω—É—Ç', en: '15 minutes' }, value: '15m', minutes: 15 },
  { label: { ru: '1 —á–∞—Å', en: '1 hour' }, value: '1h', minutes: 60 },
  { label: { ru: '4 —á–∞—Å–∞', en: '4 hours' }, value: '4h', minutes: 240 },
  { label: { ru: '1 –¥–µ–Ω—å', en: '1 day' }, value: '1d', minutes: 1440 },
];

const width = 900;
const height = 600;

const chartJSNodeCanvas = new ChartJSNodeCanvas({
  width,
  height,
  chartCallback: (ChartJS) => {
    ChartJS.register(annotationPlugin);
  },
});

// –ù–∞–∑–≤–∞–Ω–∏—è –ø–∞—Ä –Ω–∞ –¥–≤—É—Ö —è–∑—ã–∫–∞—Ö
const displayNames = {
  EURUSD: { ru: 'EUR/USD', en: 'EUR/USD' },
  USDJPY: { ru: 'USD/JPY', en: 'USD/JPY' },
  GBPUSD: { ru: 'GBP/USD', en: 'GBP/USD' },
  USDCHF: { ru: 'USD/CHF', en: 'USD/CHF' },
  AUDUSD: { ru: 'AUD/USD', en: 'AUD/USD' },
  USDCAD: { ru: 'USD/CAD', en: 'USD/CAD' },
  NZDUSD: { ru: 'NZD/USD', en: 'NZD/USD' },
  EURGBP: { ru: 'EUR/GBP', en: 'EUR/GBP' },
  EURJPY: { ru: 'EUR/JPY', en: 'EUR/JPY' },
  GBPJPY: { ru: 'GBP/JPY', en: 'GBP/JPY' },
  CHFJPY: { ru: 'CHF/JPY', en: 'CHF/JPY' },
  AUDJPY: { ru: 'AUD/JPY', en: 'AUD/JPY' },
  EURCHF: { ru: 'EUR/CHF', en: 'EUR/CHF' },
  EURCAD: { ru: 'EUR/CAD', en: 'EUR/CAD' },
  AUDCAD: { ru: 'AUD/CAD', en: 'AUD/CAD' },
  NZDJPY: { ru: 'NZD/JPY', en: 'NZD/JPY' },
  OTC_EURAUD: { ru: 'OTC EUR/AUD', en: 'OTC EUR/AUD' },
  OTC_EURCAD: { ru: 'OTC EUR/CAD', en: 'OTC EUR/CAD' },
  OTC_EURCHF: { ru: 'OTC EUR/CHF', en: 'OTC EUR/CHF' },
  OTC_EURJPY: { ru: 'OTC EUR/JPY', en: 'OTC EUR/JPY' },
  OTC_EURNZD: { ru: 'OTC EUR/NZD', en: 'OTC EUR/NZD' },
  OTC_EURUSD: { ru: 'OTC EUR/USD', en: 'OTC EUR/USD' },
  OTC_GBPCHF: { ru: 'OTC GBP/CHF', en: 'OTC GBP/CHF' },
  OTC_GBPJPY: { ru: 'OTC GBP/JPY', en: 'OTC GBP/JPY' },
  OTC_GBPNZD: { ru: 'OTC GBP/NZD', en: 'OTC GBP/NZD' },
  OTC_GBPUSD: { ru: 'OTC GBP/USD', en: 'OTC GBP/USD' },
  OTC_USDCAD: { ru: 'OTC USD/CAD', en: 'OTC USD/CAD' },
  OTC_USDCHF: { ru: 'OTC USD/CHF', en: 'OTC USD/CHF' },
  OTC_USDJPY: { ru: 'OTC USD/JPY', en: 'OTC USD/JPY' },
  OTC_USDNZD: { ru: 'OTC USD/NZD', en: 'OTC USD/NZD' },
  OTC_AUDCAD: { ru: 'OTC AUD/CAD', en: 'OTC AUD/CAD' },
  OTC_AUDCHF: { ru: 'OTC AUD/CHF', en: 'OTC AUD/CHF' },
};

// --- –¢–µ–∫—Å—Ç—ã –Ω–∞ –¥–≤—É—Ö —è–∑—ã–∫–∞—Ö ---
const texts = {
  start: {
    ru: '–ü—Ä–∏–≤–µ—Ç! –í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ / Choose your language:',
    en: 'Hello! Please choose your language / –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫:',
  },
  choosePair: {
    ru: '–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞–ª—é—Ç–Ω—É—é –ø–∞—Ä—É:',
    en: 'Choose a currency pair:',
  },
  chooseTimeframe: {
    ru: '–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∞–π–º—Ñ—Ä–µ–π–º:',
    en: 'Choose a timeframe:',
  },
  analyzing: {
    ru: (pair, tf) => `–ù–∞—á–∏–Ω–∞—é –∞–Ω–∞–ª–∏–∑ ${pair} –Ω–∞ —Ç–∞–π–º—Ñ—Ä–µ–π–º–µ ${tf}...`,
    en: (pair, tf) => `Starting analysis for ${pair} on timeframe ${tf}...`,
  },
  unknownCommand: {
    ru: '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞',
    en: 'Unknown command',
  },
  errorChart: {
    ru: '–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≥—Ä–∞—Ñ–∏–∫–∞.',
    en: 'Error generating chart.',
  },
  volumeDecreasing: {
    ru: '–û–±—ä—ë–º —Å–Ω–∏–∂–∞–µ—Ç—Å—è, —á—Ç–æ –º–æ–∂–µ—Ç —É–∫–∞–∑—ã–≤–∞—Ç—å –Ω–∞ —Å–ª–∞–±–æ—Å—Ç—å —Ç–µ–∫—É—â–µ–≥–æ –¥–≤–∏–∂–µ–Ω–∏—è.',
    en: 'Volume is decreasing, which may indicate weakness of the current move.',
  },
  volumeStable: {
    ru: '–û–±—ä—ë–º —Å—Ç–∞–±–∏–ª—å–Ω—ã–π –∏–ª–∏ —Ä–∞—Å—Ç—É—â–∏–π, –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Ç–µ–∫—É—â–∏–π —Ç—Ä–µ–Ω–¥.',
    en: 'Volume is stable or increasing, supporting the current trend.',
  },
  // ... –¥—Ä—É–≥–∏–µ —Ç–µ–∫—Å—Ç—ã, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
};

// --- –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏–∏ —Ç–µ–∫—Å—Ç–∞ ---
function t(ctx, key, ...args) {
  const lang = ctx.session.language || 'ru';
  const txt = texts[key];
  if (!txt) return '';
  if (typeof txt === 'function') return txt(...args);
  return txt[lang] || txt['ru'];
}

function getDisplayName(pair, lang = 'ru') {
  return displayNames[pair]?.[lang] || pair;
}

function getTimeframeLabel(tf, lang = 'ru') {
  return tf.label?.[lang] || tf.label || '';
}

// --- –ó–¥–µ—Å—å –∏–¥—É—Ç –≤—Å–µ –≤–∞—à–∏ —Ñ—É–Ω–∫—Ü–∏–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö, –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–æ–≤, –∞–Ω–∞–ª–∏–∑–∞ –∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≥—Ä–∞—Ñ–∏–∫–∞ –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π ---
// –î–ª—è –∫—Ä–∞—Ç–∫–æ—Å—Ç–∏ –Ω–µ –ø–æ–≤—Ç–æ—Ä—è—é –∏—Ö –ø–æ–ª–Ω–æ—Å—Ç—å—é, –≤—Å—Ç–∞–≤—å—Ç–µ —Å—é–¥–∞ –≤–∞—à–∏ —Ñ—É–Ω–∫—Ü–∏–∏ –∏–∑ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –∫–æ–¥–∞,
// –Ω–∞–ø—Ä–∏–º–µ—Ä: getBasePrice, generateFakeOHLCFromTime, calculateSMA, calculateRSI, calculateEMA, calculateMACD,
// calculateStochastic, findSupportResistance, isVolumeDecreasing, detectCandlePattern, detectRSIDivergence,
// checkBreakoutWithRetest, generateDetailedRecommendation, analyzeIndicators, generateChartImage

// –ù–∏–∂–µ ‚Äî –ø–æ–ª–Ω—ã–π –∫–æ–¥ —Å –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º –ø–æ–¥–¥–µ—Ä–∂–∫–∏ —è–∑—ã–∫–æ–≤ –∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ–º —Ç–µ–∫—Å—Ç–∞:

// --- Telegram Bot ---

const historyData = {}; // { 'EURUSD_1m': [klines...] }

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∏ –º–∞—Å—Å–∏–≤–∞ –ø–æ n —ç–ª–µ–º–µ–Ω—Ç–æ–≤
function chunkArray(arr, size) {
  const result = [];
  for (let i = 0; i < arr.length; i += size) {
    result.push(arr.slice(i, i + size));
  }
  return result;
}

bot.start(async (ctx) => {
  ctx.session = {};
  // –ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å –≤—ã–±–æ—Ä —è–∑—ã–∫–∞
  await ctx.reply(
    texts.start.ru + '\n' + texts.start.en,
    Markup.inlineKeyboard([
      [Markup.button.callback('üá∑üá∫ –†—É—Å—Å–∫–∏–π', 'lang_ru'), Markup.button.callback('üá¨üáß English', 'lang_en')],
    ])
  );
});

bot.on('callback_query', async (ctx) => {
  const data = ctx.callbackQuery.data;

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —è–∑—ã–∫–∞
  if (data === 'lang_ru' || data === 'lang_en') {
    const lang = data === 'lang_ru' ? 'ru' : 'en';
    ctx.session.language = lang;
    await ctx.answerCbQuery();

    // –ü–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞ —è–∑—ã–∫–∞ ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å –ø–∞—Ä—ã
    const langPairsMain = pairsMain.map(p => getDisplayName(p, lang));
    const langPairsOTC = pairsOTC.map(p => getDisplayName(p, lang));

    const mainKeyboard = chunkArray(langPairsMain, 2);
    const otcKeyboard = chunkArray(langPairsOTC, 2);

    const maxRows = Math.max(mainKeyboard.length, otcKeyboard.length);
    const keyboardFinal = [];

    for (let i = 0; i < maxRows; i++) {
      const leftButtons = mainKeyboard[i] || [];
      const rightButtons = otcKeyboard[i] || [];

      while (leftButtons.length < 2) leftButtons.push(' ');
      while (rightButtons.length < 2) rightButtons.push(' ');

      keyboardFinal.push([leftButtons[0], rightButtons[0]]);
      keyboardFinal.push([leftButtons[1], rightButtons[1]]);
    }

    const inlineButtons = keyboardFinal.map(row =>
      row.map(text => Markup.button.callback(text.trim(), text.trim()))
    );

    await ctx.editMessageText(t(ctx, 'choosePair'), Markup.inlineKeyboard(inlineButtons));
    return;
  }

  // –ü—Ä–æ–≤–µ—Ä–∏–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ data –≤–∞–ª—é—Ç–Ω–æ–π –ø–∞—Ä–æ–π (–Ω–∞ –≤—ã–±—Ä–∞–Ω–Ω–æ–º —è–∑—ã–∫–µ)
  const lang = ctx.session.language || 'ru';

  // –ù–∞–π–¥–µ–º –ø–∞—Ä—É –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é –Ω–∞ –≤—ã–±—Ä–∞–Ω–Ω–æ–º —è–∑—ã–∫–µ
  const pairEntry = Object.entries(displayNames).find(
    ([key, names]) => names[lang] === data
  );
  if (pairEntry) {
    const pair = pairEntry[0];
    ctx.session.pair = pair;
    await ctx.answerCbQuery();

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–∞–π–º—Ñ—Ä–µ–π–º—ã –Ω–∞ –≤—ã–±—Ä–∞–Ω–Ω–æ–º —è–∑—ã–∫–µ
    const tfButtons = timeframes.map(tf =>
      Markup.button.callback(getTimeframeLabel(tf, lang), getTimeframeLabel(tf, lang))
    );
    const inlineTfButtons = chunkArray(tfButtons, 2);

    await ctx.editMessageText(t(ctx, 'chooseTimeframe'), Markup.inlineKeyboard(inlineTfButtons));
    return;
  }

  // –ü—Ä–æ–≤–µ—Ä–∏–º —Ç–∞–π–º—Ñ—Ä–µ–π–º (–Ω–∞ –≤—ã–±—Ä–∞–Ω–Ω–æ–º —è–∑—ã–∫–µ)
  const tf = timeframes.find(tf => getTimeframeLabel(tf, lang) === data);
  if (tf) {
    ctx.session.timeframe = tf;

    if (!ctx.session.pair) {
      await ctx.answerCbQuery(t(ctx, 'choosePair'));
      return;
    }

    await ctx.answerCbQuery();

    const pairName = getDisplayName(ctx.session.pair, lang);
    const tfLabel = getTimeframeLabel(tf, lang);
    await ctx.editMessageText(t(ctx, 'analyzing', pairName, tfLabel));

    const key = `${ctx.session.pair}_${tf.value}`;
    const now = Date.now();
    const klines = generateFakeOHLCFromTime(now - tf.minutes * 60 * 1000 * 100, 100, tf.minutes, ctx.session.pair);
    historyData[key] = klines;

    const closes = klines.map(k => k.close);
    const sma5 = calculateSMA(closes, 5);
    const sma15 = calculateSMA(closes, 15);
    const rsi = calculateRSI(closes, 14);
    const macd = calculateMACD(closes);
    const stochastic = calculateStochastic(klines);
    const { supports, resistances } = findSupportResistance(klines);

    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –≥—Ä–∞—Ñ–∏–∫
    try {
      const imageBuffer = await generateChartImage(
        klines,
        sma5,
        sma15,
        supports,
        resistances,
        ctx.session.pair,
        tfLabel
      );
      await ctx.replyWithPhoto({ source: imageBuffer });
    } catch (e) {
      console.error('–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≥—Ä–∞—Ñ–∏–∫–∞:', e);
      await ctx.reply(t(ctx, 'errorChart'));
    }

    // –ê–Ω–∞–ª–∏–∑ –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
    // –î–ª—è –∞–Ω–∞–ª–∏–∑–∞ –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏—é —Ç–µ–∫—Å—Ç–∞ –≤–Ω—É—Ç—Ä–∏ —Ñ—É–Ω–∫—Ü–∏–π, –µ—Å–ª–∏ –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è.
    // –ü–æ–∫–∞ –∞–Ω–∞–ª–∏–∑ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–∞ —Ä—É—Å—Å–∫–æ–º, –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ø–µ—Ä–µ–≤–æ–¥ –∏–ª–∏ –æ—Å—Ç–∞–≤–∏—Ç—å —Ç–∞–∫.
    const analysisText = analyzeIndicators(klines, sma5, sma15, rsi, macd, stochastic, supports, resistances, lang);
    await ctx.reply(analysisText);

    // –°–±—Ä–æ—Å —Å–µ—Å—Å–∏–∏, –∫—Ä–æ–º–µ —è–∑—ã–∫–∞
    ctx.session.pair = null;
    ctx.session.timeframe = null;
    return;
  }

  // –ï—Å–ª–∏ –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–æ
  await ctx.answerCbQuery(t(ctx, 'unknownCommand'));
});

// --- –ù–∏–∂–µ –¥–æ–±–∞–≤—å—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Ñ—É–Ω–∫—Ü–∏–∏ analyzeIndicators –∏ generateDetailedRecommendation
// —á—Ç–æ–±—ã –æ–Ω–∏ —É—á–∏—Ç—ã–≤–∞–ª–∏ lang –∏ –≤–æ–∑–≤—Ä–∞—â–∞–ª–∏ —Ç–µ–∫—Å—Ç –Ω–∞ –Ω—É–∂–Ω–æ–º —è–∑—ã–∫–µ.
// –î–ª—è –ø—Ä–∏–º–µ—Ä–∞, –Ω–∏–∂–µ –ø–æ–∫–∞–∑–∞–Ω–æ, –∫–∞–∫ –º–æ–∂–Ω–æ –ø–µ—Ä–µ–¥–∞—Ç—å lang –∏ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å —Ç–µ–∫—Å—Ç –Ω–∞ —Ä—É—Å—Å–∫–æ–º –∏–ª–∏ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º.

// –ü—Ä–∏–º–µ—Ä –∏–∑–º–µ–Ω–µ–Ω–∏—è analyzeIndicators —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π —è–∑—ã–∫–∞:

function analyzeIndicators(klines, sma5, sma15, rsi, macd, stochastic, supports, resistances, lang = 'ru') {
  const last = klines.length - 1;
  const price = klines[last].close;
  const volume = klines[last].volume;
  const prevVolume = last > 0 ? klines[last - 1].volume : null;
  const prevPrice = last > 0 ? klines[last - 1].close : null;
  const prevRSI = last > 0 ? rsi[last - 1] : null;
  const candle = klines[last];

  // –ü–µ—Ä–µ–≤–æ–¥ —ç–º–æ–¥–∑–∏ –∏ —Ç–µ–∫—Å—Ç–∞ –ø–æ —è–∑—ã–∫—É
  const tTexts = {
    ru: {
      trendUp: `üìà –¢–µ–∫—É—â–∏–π —Ç—Ä–µ–Ω–¥ –≤–æ—Å—Ö–æ–¥—è—â–∏–π: SMA(5) (${sma5[last].toFixed(5)}) –≤—ã—à–µ SMA(15) (${sma15[last].toFixed(5)}).\n`,
      trendDown: `üìâ –¢–µ–∫—É—â–∏–π —Ç—Ä–µ–Ω–¥ –Ω–∏—Å—Ö–æ–¥—è—â–∏–π: SMA(5) (${sma5[last].toFixed(5)}) –Ω–∏–∂–µ SMA(15) (${sma15[last].toFixed(5)}).\n`,
      trendFlat: `‚ûñ –¢—Ä–µ–Ω–¥ –Ω–µ –≤—ã—Ä–∞–∂–µ–Ω: SMA(5) –∏ SMA(15) –±–ª–∏–∑–∫–∏ –¥—Ä—É–≥ –∫ –¥—Ä—É–≥—É.\n`,
      rsiHigh: `üö¶ RSI –≤—ã—Å–æ–∫–∏–π (${rsi[last].toFixed(1)}), —Ä—ã–Ω–æ–∫ –ø–µ—Ä–µ–∫—É–ø–ª–µ–Ω, –≤–æ–∑–º–æ–∂–µ–Ω –æ—Ç–∫–∞—Ç –≤–Ω–∏–∑.\n`,
      rsiLow: `üö¶ RSI –Ω–∏–∑–∫–∏–π (${rsi[last].toFixed(1)}), —Ä—ã–Ω–æ–∫ –ø–µ—Ä–µ–ø—Ä–æ–¥–∞–Ω, –≤–æ–∑–º–æ–∂–µ–Ω –æ—Ç—Å–∫–æ–∫ –≤–≤–µ—Ä—Ö.\n`,
      rsiNeutral: `‚ö™ RSI –≤ –Ω–µ–π—Ç—Ä–∞–ª—å–Ω–æ–π –∑–æ–Ω–µ (${rsi[last].toFixed(1)}).\n`,
      macdBull: `üêÇ MACD –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –±—ã—á–∏–π —Å–∏–≥–Ω–∞–ª (–ª–∏–Ω–∏—è MACD –≤—ã—à–µ —Å–∏–≥–Ω–∞–ª—å–Ω–æ–π).\n`,
      macdBear: `üêª MACD –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –º–µ–¥–≤–µ–∂–∏–π —Å–∏–≥–Ω–∞–ª (–ª–∏–Ω–∏—è MACD –Ω–∏–∂–µ —Å–∏–≥–Ω–∞–ª—å–Ω–æ–π).\n`,
      macdNeutral: `‚ö™ MACD –Ω–µ –¥–∞—ë—Ç —è–≤–Ω—ã—Ö —Å–∏–≥–Ω–∞–ª–æ–≤.\n`,
      stochasticBuy: `üîÑ –°—Ç–æ—Ö–∞—Å—Ç–∏–∫ –≤ –∑–æ–Ω–µ –ø–µ—Ä–µ–ø—Ä–æ–¥–∞–Ω–Ω–æ—Å—Ç–∏ —Å –ø–µ—Ä–µ—Å–µ—á–µ–Ω–∏–µ–º %K —Å–Ω–∏–∑—É –≤–≤–µ—Ä—Ö ‚Äî —Å–∏–≥–Ω–∞–ª –Ω–∞ –ø–æ–∫—É–ø–∫—É.\n`,
      stochasticSell: `üîÑ –°—Ç–æ—Ö–∞—Å—Ç–∏–∫ –≤ –∑–æ–Ω–µ –ø–µ—Ä–µ–∫—É–ø–ª–µ–Ω–Ω–æ—Å—Ç–∏ —Å –ø–µ—Ä–µ—Å–µ—á–µ–Ω–∏–µ–º %K —Å–≤–µ—Ä—Ö—É –≤–Ω–∏–∑ ‚Äî —Å–∏–≥–Ω–∞–ª –Ω–∞ –ø—Ä–æ–¥–∞–∂—É.\n`,
      stochasticNeutral: `‚ö™ –°—Ç–æ—Ö–∞—Å—Ç–∏–∫ –Ω–µ –¥–∞—ë—Ç —è–≤–Ω—ã—Ö —Å–∏–≥–Ω–∞–ª–æ–≤.\n`,
      volumeDown: `üìâ –û–±—ä—ë–º —Å–Ω–∏–∂–∞–µ—Ç—Å—è, —á—Ç–æ –º–æ–∂–µ—Ç —É–∫–∞–∑—ã–≤–∞—Ç—å –Ω–∞ —Å–ª–∞–±–æ—Å—Ç—å —Ç–µ–∫—É—â–µ–≥–æ –¥–≤–∏–∂–µ–Ω–∏—è.\n`,
      volumeUp: `üìà –û–±—ä—ë–º —Å—Ç–∞–±–∏–ª—å–Ω—ã–π –∏–ª–∏ —Ä–∞—Å—Ç—É—â–∏–π, –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Ç–µ–∫—É—â–∏–π —Ç—Ä–µ–Ω–¥.\n`,
      candlePattern: `üïØÔ∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω —Å–≤–µ—á–Ω–æ–π –ø–∞—Ç—Ç–µ—Ä–Ω: `,
      divergence: `üìä –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –¥–∏–≤–µ—Ä–≥–µ–Ω—Ü–∏—è RSI: `,
      supports: `üü© –£—Ä–æ–≤–Ω–∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∏: `,
      resistances: `üü• –£—Ä–æ–≤–Ω–∏ —Å–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏—è: `,
      closeSupport: `üîî –¶–µ–Ω–∞ –±–ª–∏–∑–∫–∞ –∫ –ø–æ–¥–¥–µ—Ä–∂–∫–µ –æ–∫–æ–ª–æ `,
      closeResistance: `üîî –¶–µ–Ω–∞ –±–ª–∏–∑–∫–∞ –∫ —Å–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏—é –æ–∫–æ–ª–æ `,
      breakoutSupport: `üöÄ –ü—Ä–æ–±–æ–π –∏ —Ä–µ—Ç–µ—Å—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏ `,
      breakoutResistance: `‚ö†Ô∏è –ü—Ä–æ–±–æ–π –∏ —Ä–µ—Ç–µ—Å—Ç —Å–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏—è `,
      strongBuy: ` —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º ‚Äî —Å–∏–ª—å–Ω—ã–π —Å–∏–≥–Ω–∞–ª –∫ –ø–æ–∫—É–ø–∫–µ.\n`,
      strongSell: ` —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º ‚Äî —Å–∏–ª—å–Ω—ã–π —Å–∏–≥–Ω–∞–ª –∫ –ø—Ä–æ–¥–∞–∂–µ.\n`,
    },
    en: {
      trendUp: `üìà Current trend is upward: SMA(5) (${sma5[last].toFixed(5)}) above SMA(15) (${sma15[last].toFixed(5)}).\n`,
      trendDown: `üìâ Current trend is downward: SMA(5) (${sma5[last].toFixed(5)}) below SMA(15) (${sma15[last].toFixed(5)}).\n`,
      trendFlat: `‚ûñ Trend is not clear: SMA(5) and SMA(15) are close.\n`,
      rsiHigh: `üö¶ RSI is high (${rsi[last].toFixed(1)}), market is overbought, possible pullback down.\n`,
      rsiLow: `üö¶ RSI is low (${rsi[last].toFixed(1)}), market is oversold, possible bounce up.\n`,
      rsiNeutral: `‚ö™ RSI is in neutral zone (${rsi[last].toFixed(1)}).\n`,
      macdBull: `üêÇ MACD shows bullish signal (MACD line above signal line).\n`,
      macdBear: `üêª MACD shows bearish signal (MACD line below signal line).\n`,
      macdNeutral: `‚ö™ MACD gives no clear signals.\n`,
      stochasticBuy: `üîÑ Stochastic in oversold zone with %K crossing up ‚Äî buy signal.\n`,
      stochasticSell: `üîÑ Stochastic in overbought zone with %K crossing down ‚Äî sell signal.\n`,
      stochasticNeutral: `‚ö™ Stochastic gives no clear signals.\n`,
      volumeDown: `üìâ Volume is decreasing, which may indicate weakness of the current move.\n`,
      volumeUp: `üìà Volume is stable or increasing, supporting the current trend.\n`,
      candlePattern: `üïØÔ∏è Candle pattern detected: `,
      divergence: `üìä RSI divergence detected: `,
      supports: `üü© Support levels: `,
      resistances: `üü• Resistance levels: `,
      closeSupport: `üîî Price is close to support around `,
      closeResistance: `üîî Price is close to resistance around `,
      breakoutSupport: `üöÄ Breakout and retest of support `,
      breakoutResistance: `‚ö†Ô∏è Breakout and retest of resistance `,
      strongBuy: ` confirmed ‚Äî strong buy signal.\n`,
      strongSell: ` confirmed ‚Äî strong sell signal.\n`,
    },
  };

  let text = '';

  // –¢—Ä–µ–Ω–¥ –ø–æ SMA
  if (sma5[last] !== null && sma15[last] !== null) {
    if (sma5[last] > sma15[last]) {
      text += tTexts[lang].trendUp;
    } else if (sma5[last] < sma15[last]) {
      text += tTexts[lang].trendDown;
    } else {
      text += tTexts[lang].trendFlat;
    }
  } else {
    text += lang === 'ru' ? '‚ö†Ô∏è –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ—Ü–µ–Ω–∫–∏ —Ç—Ä–µ–Ω–¥–∞ –ø–æ SMA.\n' : '‚ö†Ô∏è Not enough data to evaluate SMA trend.\n';
  }

  // RSI
  if (rsi[last] !== null) {
    const rsiVal = rsi[last];
    if (rsiVal > 70) {
      text += tTexts[lang].rsiHigh;
    } else if (rsiVal < 30) {
      text += tTexts[lang].rsiLow;
    } else {
      text += tTexts[lang].rsiNeutral;
    }
  } else {
    text += lang === 'ru' ? '‚ö†Ô∏è –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ RSI.\n' : '‚ö†Ô∏è Not enough data to analyze RSI.\n';
  }

  // MACD
  if (macd.macdLine[last] !== null && macd.signalLine[last] !== null) {
    if (macd.macdLine[last] > macd.signalLine[last]) {
      text += tTexts[lang].macdBull;
    } else if (macd.macdLine[last] < macd.signalLine[last]) {
      text += tTexts[lang].macdBear;
    } else {
      text += tTexts[lang].macdNeutral;
    }
  } else {
    text += lang === 'ru' ? '‚ö†Ô∏è –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ MACD.\n' : '‚ö†Ô∏è Not enough data to analyze MACD.\n';
  }

  // –°—Ç–æ—Ö–∞—Å—Ç–∏–∫
  if (stochastic.kValues[last] !== null && stochastic.dValues[last] !== null) {
    const k = stochastic.kValues[last];
    const d = stochastic.dValues[last];
    const kPrev = stochastic.kValues[last - 1];
    const dPrev = stochastic.dValues[last - 1];

    if (k < 20) {
      if (kPrev !== null && dPrev !== null && k > d && kPrev <= dPrev) {
        text += tTexts[lang].stochasticBuy;
      } else {
        text += lang === 'ru' ? '‚ö†Ô∏è –°—Ç–æ—Ö–∞—Å—Ç–∏–∫ –≤ –∑–æ–Ω–µ –ø–µ—Ä–µ–ø—Ä–æ–¥–∞–Ω–Ω–æ—Å—Ç–∏.\n' : '‚ö†Ô∏è Stochastic in oversold zone.\n';
      }
    } else if (k > 80) {
      if (kPrev !== null && dPrev !== null && k < d && kPrev >= dPrev) {
        text += tTexts[lang].stochasticSell;
      } else {
        text += lang === 'ru' ? '‚ö†Ô∏è –°—Ç–æ—Ö–∞—Å—Ç–∏–∫ –≤ –∑–æ–Ω–µ –ø–µ—Ä–µ–∫—É–ø–ª–µ–Ω–Ω–æ—Å—Ç–∏.\n' : '‚ö†Ô∏è Stochastic in overbought zone.\n';
      }
    } else {
      if (k > d) {
        text += lang === 'ru' ? 'üêÇ –°—Ç–æ—Ö–∞—Å—Ç–∏–∫ –¥–∞—ë—Ç –±—ã—á–∏–π —Å–∏–≥–Ω–∞–ª.\n' : 'üêÇ Stochastic gives a bullish signal.\n';
      } else if (k < d) {
        text += lang === 'ru' ? 'üêª –°—Ç–æ—Ö–∞—Å—Ç–∏–∫ –¥–∞—ë—Ç –º–µ–¥–≤–µ–∂–∏–π —Å–∏–≥–Ω–∞–ª.\n' : 'üêª Stochastic gives a bearish signal.\n';
      } else {
        text += tTexts[lang].stochasticNeutral;
      }
    }
  } else {
    text += lang === 'ru' ? '‚ö†Ô∏è –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –°—Ç–æ—Ö–∞—Å—Ç–∏–∫–∞.\n' : '‚ö†Ô∏è Not enough data to analyze Stochastic.\n';
  }

  // –û–±—ä—ë–º
  if (isVolumeDecreasing(volume, prevVolume)) {
    text += tTexts[lang].volumeDown;
  } else {
    text += tTexts[lang].volumeUp;
  }

  // –°–≤–µ—á–Ω–æ–π –ø–∞—Ç—Ç–µ—Ä–Ω
  const candlePattern = detectCandlePattern(candle);
  if (candlePattern) {
    text += tTexts[lang].candlePattern + candlePattern + '.\n';
  }

  // –î–∏–≤–µ—Ä–≥–µ–Ω—Ü–∏—è RSI
  const divergence = detectRSIDivergence(prevPrice, prevRSI, price, rsi[last]);
  if (divergence) {
    text += tTexts[lang].divergence + divergence + '.\n';
  }

  // –£—Ä–æ–≤–Ω–∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –∏ —Å–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏—è
  if (supports.length > 0) {
    text += tTexts[lang].supports + supports.map(p => p.toFixed(5)).join(', ') + '.\n';
  }
  if (resistances.length > 0) {
    text += tTexts[lang].resistances + resistances.map(p => p.toFixed(5)).join(', ') + '.\n';
  }

  const threshold = 0.0015;
  const closeSupports = supports.filter(s => Math.abs(price - s) / s < threshold);
  const closeResistances = resistances.filter(r => Math.abs(price - r) / r < threshold);

  if (closeSupports.length > 0) {
    text += tTexts[lang].closeSupport + closeSupports[0].toFixed(5) + (lang === 'ru' ? ', –≤–æ–∑–º–æ–∂–µ–Ω –æ—Ç—Å–∫–æ–∫ –≤–≤–µ—Ä—Ö.\n' : ', possible bounce up.\n');
  }
  if (closeResistances.length > 0) {
    text += tTexts[lang].closeResistance + closeResistances[0].toFixed(5) + (lang === 'ru' ? ', –≤–æ–∑–º–æ–∂–µ–Ω –æ—Ç–∫–∞—Ç –≤–Ω–∏–∑.\n' : ', possible pullback down.\n');
  }

  // –ü—Ä–æ–±–æ–π –∏ —Ä–µ—Ç–µ—Å—Ç
  const lastPrices = klines.slice(-3).map(c => c.close);
  if (supports.length > 0 && checkBreakoutWithRetest(lastPrices, supports[0], true)) {
    text += tTexts[lang].breakoutSupport + supports[0].toFixed(5) + tTexts[lang].strongBuy;
  }
  if (resistances.length > 0 && checkBreakoutWithRetest(lastPrices, resistances[0], false)) {
    text += tTexts[lang].breakoutResistance + resistances[0].toFixed(5) + tTexts[lang].strongSell;
  }

  // –ò—Ç–æ–≥–æ–≤—ã–µ –≤—ã–≤–æ–¥—ã —Å –ø–æ–¥—Ä–æ–±–Ω–æ–π —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–µ–π —Å –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º
  text += '\n' + generateDetailedRecommendationLang(price, sma5[last], rsi[last], candlePattern, lang);

  return text;
}

// –ê–Ω–∞–ª–æ–≥–∏—á–Ω–æ –∏–∑–º–µ–Ω—è–µ–º generateDetailedRecommendation, —á—Ç–æ–±—ã –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å —è–∑—ã–∫

function generateDetailedRecommendationLang(price, sma5, rsiVal, candlePattern, lang = 'ru') {
  const priceAboveSMA = sma5 !== null && price > sma5;
  const rsiOverbought = rsiVal !== null && rsiVal > 70;
  const rsiOversold = rsiVal !== null && rsiVal < 30;

  let emoji = '‚ùì';
  let recommendation = '';

  if (lang === 'ru') {
    if (priceAboveSMA && !rsiOverbought && candlePattern && candlePattern.includes('–ú–æ–ª–æ—Ç')) {
      emoji = 'üìàüõ†Ô∏è';
      recommendation =
        `–¶–µ–Ω–∞ —Ç–æ—Ä–≥—É–µ—Ç—Å—è –≤—ã—à–µ 50-–ø–µ—Ä–∏–æ–¥–Ω–æ–π —Å–∫–æ–ª—å–∑—è—â–µ–π —Å—Ä–µ–¥–Ω–µ–π (${sma5.toFixed(5)}), ` +
        `—á—Ç–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç –≤–æ—Å—Ö–æ–¥—è—â–∏–π —Ç—Ä–µ–Ω–¥. RSI (${rsiVal.toFixed(1)}) –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ–π –∑–æ–Ω–µ –±–µ–∑ –ø—Ä–∏–∑–Ω–∞–∫–æ–≤ –ø–µ—Ä–µ–∫—É–ø–ª–µ–Ω–Ω–æ—Å—Ç–∏.\n` +
        `–û–±–Ω–∞—Ä—É–∂–µ–Ω —Å–≤–µ—á–Ω–æ–π –ø–∞—Ç—Ç–µ—Ä–Ω "–ú–æ–ª–æ—Ç" ‚Äî —Å–∏–ª—å–Ω—ã–π —Å–∏–≥–Ω–∞–ª –±—ã—á—å–µ–≥–æ —Ä–∞–∑–≤–æ—Ä–æ—Ç–∞.\n\n` +
        `–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —Ä–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å –ø–æ–∫—É–ø–∫–∏ —Å —Ü–µ–ª—å—é –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è —Ä–æ—Å—Ç–∞ —Ü–µ–Ω—ã. –¶–µ–ª—è–º–∏ –º–æ–≥—É—Ç —Å—Ç–∞—Ç—å –±–ª–∏–∂–∞–π—à–∏–µ —É—Ä–æ–≤–Ω–∏ —Å–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏—è. ` +
        `–°–ª–µ–¥—É–µ—Ç –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä–æ–≤–∞—Ç—å –æ–±—ä—ë–º –∏ –¥–∏–Ω–∞–º–∏–∫—É RSI –¥–ª—è —Å–≤–æ–µ–≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–∏—Å–∫–∞–º–∏.`;
    } else if (!priceAboveSMA && rsiOverbought && candlePattern && candlePattern.includes('–ü–æ–≤–µ—à–µ–Ω–Ω—ã–π')) {
      emoji = 'üìâ‚ö†Ô∏è';
      recommendation =
        `–¶–µ–Ω–∞ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω–∏–∂–µ 50-–ø–µ—Ä–∏–æ–¥–Ω–æ–π —Å–∫–æ–ª—å–∑—è—â–µ–π —Å—Ä–µ–¥–Ω–µ–π (${sma5?.toFixed(5) || 'N/A'}), ` +
        `—á—Ç–æ —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ –Ω–∏—Å—Ö–æ–¥—è—â–∏–π —Ç—Ä–µ–Ω–¥. RSI (${rsiVal.toFixed(1)}) –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–µ—Ä–µ–∫—É–ø–ª–µ–Ω–Ω–æ—Å—Ç—å —Ä—ã–Ω–∫–∞.\n` +
        `–°–≤–µ—á–Ω–æ–π –ø–∞—Ç—Ç–µ—Ä–Ω "–ü–æ–≤–µ—à–µ–Ω–Ω—ã–π" —Å–∏–≥–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –æ –≤–æ–∑–º–æ–∂–Ω–æ–º —Ä–∞–∑–≤–æ—Ä–æ—Ç–µ –≤–Ω–∏–∑.\n\n` +
        `–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —Ä–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å –ø—Ä–æ–¥–∞–∂–∏ —Å —Ü–µ–ª—å—é —Å–Ω–∏–∂–µ–Ω–∏—è —Ü–µ–Ω—ã –∫ –±–ª–∏–∂–∞–π—à–∏–º —É—Ä–æ–≤–Ω—è–º –ø–æ–¥–¥–µ—Ä–∂–∫–∏. ` +
        `–í–∞–∂–Ω–æ —Å–ª–µ–¥–∏—Ç—å –∑–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é—â–∏–º–∏ —Å–∏–≥–Ω–∞–ª–∞–º–∏ –∏ –æ–±—ä—ë–º–æ–º –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —Å–∏–ª—ã –¥–≤–∏–∂–µ–Ω–∏—è.`;
    } else if (priceAboveSMA && rsiOversold) {
      emoji = 'üîÑüìä';
      recommendation =
        `–¶–µ–Ω–∞ –≤—ã—à–µ —Å–∫–æ–ª—å–∑—è—â–µ–π —Å—Ä–µ–¥–Ω–µ–π (${sma5.toFixed(5)}), –Ω–æ RSI (${rsiVal.toFixed(1)}) —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ –ø–µ—Ä–µ–ø—Ä–æ–¥–∞–Ω–Ω–æ—Å—Ç—å.\n` +
        `–≠—Ç–æ —á–∞—Å—Ç–æ –ø—Ä–µ–¥–≤–µ—â–∞–µ—Ç –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ –≤–æ—Å—Ö–æ–¥—è—â–µ–≥–æ —Ç—Ä–µ–Ω–¥–∞ –ø–æ—Å–ª–µ –∫—Ä–∞—Ç–∫–æ—Å—Ä–æ—á–Ω–æ–π –∫–æ—Ä—Ä–µ–∫—Ü–∏–∏.\n\n` +
        `–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∏—Å–∫–∞—Ç—å —Ç–æ—á–∫–∏ –≤—Ö–æ–¥–∞ –≤ –ø–æ–∫—É–ø–∫–∏ —Å —Ü–µ–ª—å—é –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ —Ç—Ä–µ–Ω–¥—É. ` +
        `–°–ª–µ–¥—É–µ—Ç –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä–æ–≤–∞—Ç—å —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–≤–µ—á–Ω—ã—Ö –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤ –∏ –æ–±—ä—ë–º –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —Ä–∞–∑–≤–æ—Ä–æ—Ç–∞.`;
    } else if (!priceAboveSMA && rsiOverbought) {
      emoji = '‚ö†Ô∏èüìâ';
      recommendation =
        `–¶–µ–Ω–∞ —Ç–æ—Ä–≥—É–µ—Ç—Å—è –Ω–∏–∂–µ —Å–∫–æ–ª—å–∑—è—â–µ–π —Å—Ä–µ–¥–Ω–µ–π (${sma5?.toFixed(5) || 'N/A'}), –∞ RSI (${rsiVal.toFixed(1)}) —Å–∏–≥–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –æ –ø–µ—Ä–µ–∫—É–ø–ª–µ–Ω–Ω–æ—Å—Ç–∏.\n` +
        `–≠—Ç–æ –º–æ–∂–µ—Ç –æ–∑–Ω–∞—á–∞—Ç—å —Å–∫–æ—Ä—É—é –∫–æ—Ä—Ä–µ–∫—Ü–∏—é –∏–ª–∏ —Ä–∞–∑–≤–æ—Ä–æ—Ç –≤–Ω–∏–∑.\n\n` +
        `–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —Ä–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å –ø—Ä–æ–¥–∞–∂–∏ —Å —Ü–µ–ª—å—é —Å–Ω–∏–∂–µ–Ω–∏—è —Ü–µ–Ω—ã –∫ —É—Ä–æ–≤–Ω—è–º –ø–æ–¥–¥–µ—Ä–∂–∫–∏, ` +
        `–Ω–æ –≤–∞–∂–Ω–æ –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä–æ–≤–∞—Ç—å —Å–∏–≥–Ω–∞–ª—ã –æ–±—ä—ë–º–∞ –∏ —Å–≤–µ—á–Ω—ã—Ö –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è.`;
    } else if (priceAboveSMA && !rsiOverbought && !rsiOversold) {
      emoji = 'üìàüîç';
      recommendation =
        `–¶–µ–Ω–∞ –≤—ã—à–µ —Å–∫–æ–ª—å–∑—è—â–µ–π —Å—Ä–µ–¥–Ω–µ–π (${sma5.toFixed(5)}), —á—Ç–æ —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ –≤–æ—Å—Ö–æ–¥—è—â–∏–π —Ç—Ä–µ–Ω–¥.\n` +
        `RSI (${rsiVal.toFixed(1)}) –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –Ω–µ–π—Ç—Ä–∞–ª—å–Ω–æ–π –∑–æ–Ω–µ, –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—è –±–∞–ª–∞–Ω—Å —Å–ø—Ä–æ—Å–∞ –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è.\n\n` +
        `–û–∂–∏–¥–∞–µ—Ç—Å—è –¥–∞–ª—å–Ω–µ–π—à–µ–µ –¥–≤–∏–∂–µ–Ω–∏–µ –≤–≤–µ—Ä—Ö —Å –≤–æ–∑–º–æ–∂–Ω—ã–º–∏ –∫—Ä–∞—Ç–∫–æ—Å—Ä–æ—á–Ω—ã–º–∏ –∫–æ—Ä—Ä–µ–∫—Ü–∏—è–º–∏. ` +
        `–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∏—Å–∫–∞—Ç—å —Ç–æ—á–∫–∏ –¥–ª—è –≤—Ö–æ–¥–∞ –≤ –ø–æ–∫—É–ø–∫–∏ –Ω–∞ –æ—Ç–∫–∞—Ç–∞—Ö, —É—á–∏—Ç—ã–≤–∞—è —É—Ä–æ–≤–Ω–∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∏.`;
    } else if (!priceAboveSMA && !rsiOverbought && !rsiOversold) {
      emoji = 'üìâüîç';
      recommendation =
        `–¶–µ–Ω–∞ –Ω–∏–∂–µ —Å–∫–æ–ª—å–∑—è—â–µ–π —Å—Ä–µ–¥–Ω–µ–π (${sma5?.toFixed(5) || 'N/A'}), —á—Ç–æ —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ –Ω–∏—Å—Ö–æ–¥—è—â–∏–π —Ç—Ä–µ–Ω–¥.\n` +
        `RSI (${rsiVal.toFixed(1)}) –Ω–µ–π—Ç—Ä–∞–ª–µ–Ω, —á—Ç–æ –≥–æ–≤–æ—Ä–∏—Ç –æ —Ä–∞–≤–Ω–æ–≤–µ—Å–∏–∏ –º–µ–∂–¥—É –ø–æ–∫—É–ø–∞—Ç–µ–ª—è–º–∏ –∏ –ø—Ä–æ–¥–∞–≤—Ü–∞–º–∏.\n\n` +
        `–û–∂–∏–¥–∞–µ—Ç—Å—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ —Å–Ω–∏–∂–µ–Ω–∏—è —Å –≤–æ–∑–º–æ–∂–Ω—ã–º–∏ –æ—Ç–∫–∞—Ç–∞–º–∏. ` +
        `–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —Ä–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å –ø—Ä–æ–¥–∞–∂–∏ –Ω–∞ –æ—Ç–∫–∞—Ç–∞—Ö —Å –∫–æ–Ω—Ç—Ä–æ–ª–µ–º —É—Ä–æ–≤–Ω–µ–π —Å–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏—è.`;
    } else if (candlePattern) {
      emoji = 'üïØÔ∏è';
      recommendation =
        `–û–±–Ω–∞—Ä—É–∂–µ–Ω —Å–≤–µ—á–Ω–æ–π –ø–∞—Ç—Ç–µ—Ä–Ω "${candlePattern}", –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–µ—Ç —É–∫–∞–∑—ã–≤–∞—Ç—å –Ω–∞ —Ä–∞–∑–≤–æ—Ä–æ—Ç –∏–ª–∏ –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ —Ç—Ä–µ–Ω–¥–∞.\n\n` +
        `–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —É—á–∏—Ç—ã–≤–∞—Ç—å —ç—Ç–æ—Ç —Å–∏–≥–Ω–∞–ª –≤ —Å–æ—á–µ—Ç–∞–Ω–∏–∏ —Å —Ç–µ–∫—É—â–∏–º —Ç—Ä–µ–Ω–¥–æ–º –∏ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞–º–∏ –¥–ª—è –ø—Ä–∏–Ω—è—Ç–∏—è —Ä–µ—à–µ–Ω–∏—è.`;
    } else {
      if (priceAboveSMA) {
        emoji = 'üìà‚û°Ô∏è';
        recommendation =
          `–¶–µ–Ω–∞ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤—ã—à–µ —Å–∫–æ–ª—å–∑—è—â–µ–π —Å—Ä–µ–¥–Ω–µ–π (${sma5.toFixed(5)}), —á—Ç–æ –≥–æ–≤–æ—Ä–∏—Ç –æ –≤–æ—Å—Ö–æ–¥—è—â–µ–º —Ç—Ä–µ–Ω–¥–µ.\n` +
          `RSI (${rsiVal !== null ? rsiVal.toFixed(1) : 'N/A'}) –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —ç–∫—Å—Ç—Ä–µ–º–∞–ª—å–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π.\n\n` +
          `–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —Ä–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å –ø–æ–∫—É–ø–∫–∏ —Å —Ü–µ–ª—è–º–∏ –Ω–∞ –±–ª–∏–∂–∞–π—à–∏—Ö —É—Ä–æ–≤–Ω—è—Ö —Å–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏—è –∏ –∫–æ–Ω—Ç—Ä–æ–ª–µ–º —Ä–∏—Å–∫–æ–≤.`;
      } else {
        emoji = 'üìâ‚û°Ô∏è';
        recommendation =
          `–¶–µ–Ω–∞ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω–∏–∂–µ —Å–∫–æ–ª—å–∑—è—â–µ–π —Å—Ä–µ–¥–Ω–µ–π (${sma5 !== null ? sma5.toFixed(5) : 'N/A'}), —á—Ç–æ –≥–æ–≤–æ—Ä–∏—Ç –æ –Ω–∏—Å—Ö–æ–¥—è—â–µ–º —Ç—Ä–µ–Ω–¥–µ.\n` +
          `RSI (${rsiVal !== null ? rsiVal.toFixed(1) : 'N/A'}) –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —ç–∫—Å—Ç—Ä–µ–º–∞–ª—å–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π.\n\n` +
          `–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —Ä–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å –ø—Ä–æ–¥–∞–∂–∏ —Å —Ü–µ–ª—è–º–∏ –Ω–∞ –±–ª–∏–∂–∞–π—à–∏—Ö —É—Ä–æ–≤–Ω—è—Ö –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –∏ –∫–æ–Ω—Ç—Ä–æ–ª–µ–º —Ä–∏—Å–∫–æ–≤.`;
      }
    }
  } else {
    // English
    if (priceAboveSMA && !rsiOverbought && candlePattern && candlePattern.includes('–ú–æ–ª–æ—Ç')) {
      emoji = 'üìàüõ†Ô∏è';
      recommendation =
        `Price is above the 50-period moving average (${sma5.toFixed(5)}), ` +
        `confirming an uptrend. RSI (${rsiVal.toFixed(1)}) is in a comfortable zone without signs of overbought.\n` +
        `Detected "Hammer" candle pattern ‚Äî a strong bullish reversal signal.\n\n` +
        `Consider buying with the target of continuing price growth. Targets may be the nearest resistance levels. ` +
        `Monitor volume and RSI dynamics for timely risk management.`;
    } else if (!priceAboveSMA && rsiOverbought && candlePattern && candlePattern.includes('–ü–æ–≤–µ—à–µ–Ω–Ω—ã–π')) {
      emoji = 'üìâ‚ö†Ô∏è';
      recommendation =
        `Price is below the 50-period moving average (${sma5?.toFixed(5) || 'N/A'}), ` +
        `indicating a downtrend. RSI (${rsiVal.toFixed(1)}) shows an overbought market.\n` +
        `The "Hanging Man" candle pattern signals a possible downward reversal.\n\n` +
        `Consider selling with the aim of lowering the price to the nearest support levels. ` +
        `It is important to watch for confirming signals and volume to confirm the strength of the move.`;
    } else if (priceAboveSMA && rsiOversold) {
      emoji = 'üîÑüìä';
      recommendation =
        `Price is above the moving average (${sma5.toFixed(5)}), but RSI (${rsiVal.toFixed(1)}) indicates oversold.\n` +
        `This often foretells continuation of the uptrend after a short-term correction.\n\n` +
        `Look for entry points to buy aiming to return to the trend. ` +
        `Control candle pattern formation and volume for reversal confirmation.`;
    } else if (!priceAboveSMA && rsiOverbought) {
      emoji = '‚ö†Ô∏èüìâ';
      recommendation =
        `Price is below the moving average (${sma5?.toFixed(5) || 'N/A'}), and RSI (${rsiVal.toFixed(1)}) signals overbought.\n` +
        `This may mean an imminent correction or downward reversal.\n\n` +
        `Consider selling aiming to lower the price to support levels, ` +
        `but monitor volume and candle pattern signals for confirmation.`;
    } else if (priceAboveSMA && !rsiOverbought && !rsiOversold) {
      emoji = 'üìàüîç';
      recommendation =
        `Price is above the moving average (${sma5.toFixed(5)}), indicating an uptrend.\n` +
        `RSI (${rsiVal.toFixed(1)}) is in a neutral zone, confirming the balance of supply and demand.\n\n` +
        `Further upward movement is expected with possible short-term corrections. ` +
        `Look for entry points on pullbacks considering support levels.`;
    } else if (!priceAboveSMA && !rsiOverbought && !rsiOversold) {
      emoji = 'üìâüîç';
      recommendation =
        `Price is below the moving average (${sma5?.toFixed(5) || 'N/A'}), indicating a downtrend.\n` +
        `RSI (${rsiVal.toFixed(1)}) is neutral, indicating equilibrium between buyers and sellers.\n\n` +
        `Further decline is expected with possible pullbacks. ` +
        `Consider selling on pullbacks controlling resistance levels.`;
    } else if (candlePattern) {
      emoji = 'üïØÔ∏è';
      recommendation =
        `Detected candle pattern "${candlePattern}" which may indicate reversal or trend continuation.\n\n` +
        `Consider this signal in conjunction with current trend and indicators for decision making.`;
    } else {
      if (priceAboveSMA) {
        emoji = 'üìà‚û°Ô∏è';
        recommendation =
          `Price is above the moving average (${sma5.toFixed(5)}), indicating an uptrend.\n` +
          `RSI (${rsiVal !== null ? rsiVal.toFixed(1) : 'N/A'}) shows no extreme values.\n\n` +
          `Consider buying targeting the nearest resistance levels and risk control.`;
      } else {
        emoji = 'üìâ‚û°Ô∏è';
        recommendation =
          `Price is below the moving average (${sma5 !== null ? sma5.toFixed(5) : 'N/A'}), indicating a downtrend.\n` +
          `RSI (${rsiVal !== null ? rsiVal.toFixed(1) : 'N/A'}) shows no extreme values.\n\n` +
          `Consider selling targeting the nearest support levels and risk control.`;
      }
    }
  }

  return `${emoji} Recommendation:\n${recommendation}\n\n‚ö†Ô∏è Remember, these indicators do not guarantee future price movements, ` +
    `and additional analysis should always be conducted before making trading decisions.`;
}

// --- –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ ---
bot.launch();
console.log('–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ');
